CREATE DATABASE Music
 DEFAULT CHARACTER SET utf8;
*
 USE Music; //command line only
*
CREATE TABLE Artists (
    artist_id INTEGER NOT NULL AUTO_INCREMENT,
    name VARCHAR(255),
    PRIMARY KEY(artist_id)
) ENGINE = InnoDB;


*
CREATE TABLE Album (
    album_id INTEGER NOT NULL AUTO_INCREMENT,
    title VARCHAR(255),
    artist_id INTEGER,
    PRIMARY KEY(album,_id),
    INDEX USING BTREE (title),

    CONSTRAINT FOREIGN KEY (artist_id)
    REFERENCES Artist (artist_id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

*

CREATE TABLE Genre (
    genre_id INTEGER NOT NULL AUTO_INCREMENT,
    name VARCHAR(255),
    PRIMARY KEY (genre_id),
    INDEX USING BTREE (name)
) ENGINE = InnoDB;

*

CREATE TABLE Track (
    track_id INTEGER NOT NULL AUTO_INCREMENT,
    title VARCHAR(255),
    len INTEGER,
    rating INTEGER,
    count INTEGER,
    album_id INTEGER,
    genre_id INTEGER,
    PRIMARY KEY (track_id),
    INDEX USING BTREE (title),

    CONSTRAINT FOREIGN KEY (album_id) REFERENCES Album (album_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (genre_id) REFERENCES Genre (genre_id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

*

INSERT INTO Artists (name) Values ('Led Zeppelin');
INSERT INTO Artists (name) Values ('AC/DC');

*

INSERT INTO Genre (name) VALUES ('Rock');
INSERT INTO Genre (name) VALUES ('Metal');

*

INSERT INTO Album (title, artist_id) VALUES ('Who Made Who', 2);
INSERT INTO Album (title, artist_id) VALUES ('IV', 1);

*

INSERT INTO Track (title, rating, len, count, album_id, genre_id)
VALUES ('Black Dog', 5, 297, 0, 2, 1);

INSERT INTO Track (title, rating, len, count, album_id, genre_id)
VALUES ('Stairway', 5, 482, 0, 2, 1);

INSERT INTO Track (title, rating, len, count, album_id, genre_id)
VALUES ('About to Rock', 5, 313, 0, 1, 2);

INSERT INTO Track (title, rating, len, count, album_id, genre_id)
VALUES ('Who Made Who', 5, 207, 0, 1, 2);


//JOIN OPERATIONS
*Relational Power
-By removing the replicated data and replacing it with references to a 
single copy of each bit of data, we build a "web" of information that
the relational database can read through very quickly - even for very
large amounts of data
-Often when you want some data it comes from a number of tables 
linked by these foreign keys

-The JOIN operation links across severan tables as part of a SELECT operation.
-You must tell the JOIN how to use the keys that make the 
connection between the tables using an ON clause.


*

SELECT Album.title, Artist.name FROM Album JOIN Artists ON Album.artist_id = Artist.artist_id;
*
SELECT Album.title,Album.artist_id,Artists.artist_id,Artists.name
FROM Album JOIN Artists ON Album.artist_id = Artists.artist_id;
*
SELECT Track.title, Track.genre_id, Genre.genre_id, Genre.name FROM Track JOIN Genre;X
*
SELECT Track.title, Genre.name FROM Track JOIN Genre ON Track.genre_id = Genre.genre_id;
*
SELECT Track.title,Artists.name,Album.title,Genre.name
FROM Track JOIN Genre JOIN Album JOIN Artists ON 
Track.genre_id = Genre.genre_id AND Track.album_id = 
Album.album_id AND Album.artist_id = Artist.artist_id